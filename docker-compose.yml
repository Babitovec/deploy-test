networks:
  dev:
    ipam: 
      config: 
        - subnet: 10.1.0.0/24

services:
  nginx:
    image: nginx:1.25.4
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - './ssl:/var/ssl:ro'
      - './frontend:/var/www/html/frontend'
    depends_on:
      - backend
      - frontend
    networks:
      dev:
        ipv4_address: 10.1.0.250

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/var/www/html/backend
    command: ["npm", "run", "start"]
    networks:
      dev:
        ipv4_address: 10.1.0.3

  # frontend:
  #   build:
  #     context: ./frontend
  #   volumes:
  #     - ./frontend:/var/www/html/frontend
  #   # command: ["npm", "run", "build"]
  #   command: sh -c "npm install && npm run build"
  #   networks:
  #     dev:
  #       ipv4_address: 10.1.0.4

  # mongo:
  #   image: mongo
  #   container_name: mongo
  #   restart: always
  #   tty: true
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: root123
  #   volumes:
  #     - ./data/mongo:/data/db:rw
  #     - ./data/dumps:/var/dumps:rw
  #     - ./logs/mongo:/var/log/mongo:rw
  #   networks:
  #     dev:
  #       ipv4_address: 10.1.0.6
